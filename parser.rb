#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class Calcp < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     3,    19,    39,     4,    10,    30,    31,    52,    34,    19,
    38,    33,    10,    15,    30,    31,    16,    50,    17,    20,
    21,    15,    30,    31,    16,    49,    17,    20,    21,    34,
    19,    37,    33,    10,    28,    29,    54,    34,    19,    55,
    33,    10,    15,    28,    29,    16,    48,    17,    20,    21,
    15,    57,    58,    16,    59,    17,    20,    21,    34,    19,
    47,    33,    10,    61,    40,    63,    34,    19,    64,    33,
    10,    15,    57,    25,    16,    24,    17,    20,    21,    15,
    67,    68,    16,    23,    17,    20,    21,    34,    19,    22,
    33,    10,    68,   nil,   nil,    34,    19,   nil,    33,    10,
    15,   nil,   nil,    16,   nil,    17,    20,    21,    15,   nil,
   nil,    16,   nil,    17,    20,    21,    34,    19,   nil,    33,
    10,   nil,   nil,   nil,    34,    19,   nil,    33,    10,    15,
   nil,   nil,    16,   nil,    17,    20,    21,    15,   nil,   nil,
    16,   nil,    17,    20,    21,    34,    19,   nil,    33,    10,
   nil,   nil,   nil,    34,    19,   nil,    33,    10,    15,    19,
   nil,    16,   nil,    17,    20,    21,    15,    19,   nil,    16,
   nil,    17,    20,    21,    16,    19,    17,    20,    21,   nil,
    19,   nil,    16,   nil,    17,    20,    21,    19,   nil,   nil,
    16,   nil,    17,    20,    21,    16,    19,    17,    20,    21,
   nil,    19,    16,   nil,    17,    20,    21,    19,   nil,   nil,
   nil,    16,    19,    17,    20,    21,    16,   nil,    17,    20,
    21,   nil,    16,   nil,    17,    20,    21,    16,   nil,    17,
    20,    21,    26,    27,    28,    29 ]

racc_action_check = [
     0,     0,    24,     0,     0,    43,    43,    39,    68,    68,
    23,    68,    68,     0,    44,    44,     0,    36,     0,     0,
     0,    68,    12,    12,    68,    35,    68,    68,    68,    67,
    67,    22,    67,    67,    42,    42,    47,    63,    63,    48,
    63,    63,    67,    41,    41,    67,    34,    67,    67,    67,
    63,    51,    52,    63,    54,    63,    63,    63,    61,    61,
    33,    61,    61,    56,    25,    58,    57,    57,    59,    57,
    57,    61,    60,    10,    61,     4,    61,    61,    61,    57,
    64,    66,    57,     3,    57,    57,    57,    55,    55,     1,
    55,    55,    69,   nil,   nil,    49,    49,   nil,    49,    49,
    55,   nil,   nil,    55,   nil,    55,    55,    55,    49,   nil,
   nil,    49,   nil,    49,    49,    49,    15,    15,   nil,    15,
    15,   nil,   nil,   nil,    16,    16,   nil,    16,    16,    15,
   nil,   nil,    15,   nil,    15,    15,    15,    16,   nil,   nil,
    16,   nil,    16,    16,    16,    38,    38,   nil,    38,    38,
   nil,   nil,   nil,    40,    40,   nil,    40,    40,    38,    46,
   nil,    38,   nil,    38,    38,    38,    40,    45,   nil,    40,
   nil,    40,    40,    40,    46,    26,    46,    46,    46,   nil,
    27,   nil,    45,   nil,    45,    45,    45,    28,   nil,   nil,
    26,   nil,    26,    26,    26,    27,    29,    27,    27,    27,
   nil,    30,    28,   nil,    28,    28,    28,    13,   nil,   nil,
   nil,    29,    31,    29,    29,    29,    30,   nil,    30,    30,
    30,   nil,    13,   nil,    13,    13,    13,    31,   nil,    31,
    31,    31,    11,    11,    11,    11 ]

racc_action_pointer = [
    -8,    89,   nil,    74,    66,   nil,   nil,   nil,   nil,   nil,
    64,   217,     3,   198,   nil,   108,   116,   nil,   nil,   nil,
   nil,   nil,    31,     0,    -8,    51,   166,   171,   178,   187,
   192,   203,   nil,    51,    37,     3,    -8,   nil,   137,    -5,
   145,    26,    17,   -14,    -5,   158,   150,    26,    29,    87,
   nil,    37,    43,   nil,    42,    79,    40,    58,    52,    59,
    58,    50,   nil,    29,    67,   nil,    67,    21,     0,    78,
   nil ]

racc_action_default = [
    -2,   -31,    -1,   -31,   -31,    -5,    -6,    -7,    -8,    -9,
   -31,   -15,   -18,   -21,   -23,   -31,   -31,   -26,   -27,   -28,
   -29,   -30,   -31,   -31,   -31,   -31,   -31,   -31,   -31,   -31,
   -31,   -31,   -22,   -31,   -31,   -31,   -31,    71,   -31,   -31,
   -31,   -13,   -14,   -16,   -17,   -19,   -20,   -31,   -31,   -31,
   -25,    -3,   -31,   -12,   -31,   -31,   -31,   -31,   -31,   -31,
   -31,   -31,   -11,   -31,   -31,   -24,    -4,   -31,   -31,   -31,
   -10 ]

racc_goto_table = [
     2,    32,    41,    42,    45,    46,    43,    44,     1,   nil,
   nil,   nil,   nil,   nil,   nil,    35,    36,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    32,    32,   nil,   nil,   nil,    51,   nil,
    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    56,
   nil,   nil,   nil,   nil,   nil,    60,   nil,    62,   nil,   nil,
   nil,    65,   nil,    66,   nil,   nil,   nil,    69,    70 ]

racc_goto_check = [
     2,    11,     8,     8,    10,    10,     9,     9,     1,   nil,
   nil,   nil,   nil,   nil,   nil,     2,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    11,    11,   nil,   nil,   nil,     2,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,   nil,   nil,   nil,   nil,     2,   nil,     2,   nil,   nil,
   nil,     2,   nil,     2,   nil,   nil,   nil,     2,     2 ]

racc_goto_pointer = [
   nil,     8,     0,   nil,   nil,   nil,   nil,   nil,   -24,   -22,
   -26,   -12,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     5,     6,     7,     8,     9,    11,    12,
    13,    14,    18 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 30, :_reduce_none,
  0, 30, :_reduce_2,
  4, 30, :_reduce_3,
  7, 30, :_reduce_4,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  9, 36, :_reduce_10,
  6, 34, :_reduce_11,
  4, 35, :_reduce_12,
  3, 33, :_reduce_13,
  3, 33, :_reduce_14,
  1, 33, :_reduce_none,
  3, 37, :_reduce_16,
  3, 37, :_reduce_17,
  1, 37, :_reduce_none,
  3, 38, :_reduce_19,
  3, 38, :_reduce_20,
  1, 38, :_reduce_none,
  2, 39, :_reduce_22,
  1, 39, :_reduce_none,
  6, 32, :_reduce_24,
  3, 40, :_reduce_25,
  1, 40, :_reduce_26,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 41, :_reduce_29,
  1, 41, :_reduce_30 ]

racc_reduce_n = 31

racc_shift_n = 71

racc_token_table = {
  false => 0,
  :error => 1,
  "->" => 2,
  "^" => 3,
  "*" => 4,
  "/" => 5,
  "+" => 6,
  "-" => 7,
  :LET => 8,
  :IDENT => 9,
  :EQ => 10,
  :FIX => 11,
  :FUN => 12,
  :ARROW => 13,
  :IN => 14,
  :LT => 15,
  :GT => 16,
  :PLUS => 17,
  :MINUS => 18,
  :MULT => 19,
  :DIV => 20,
  :IF => 21,
  :THEN => 22,
  :ELSE => 23,
  :LPAREN => 24,
  :RPAREN => 25,
  :NUMBER => 26,
  :TRUE => 27,
  :FALSE => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"->\"",
  "\"^\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "LET",
  "IDENT",
  "EQ",
  "FIX",
  "FUN",
  "ARROW",
  "IN",
  "LT",
  "GT",
  "PLUS",
  "MINUS",
  "MULT",
  "DIV",
  "IF",
  "THEN",
  "ELSE",
  "LPAREN",
  "RPAREN",
  "NUMBER",
  "TRUE",
  "FALSE",
  "$start",
  "target",
  "Expr",
  "IfExpr",
  "RelExpr",
  "LetExpr",
  "FunExpr",
  "FixExpr",
  "ASExpr",
  "MDExpr",
  "AppExpr",
  "AExpr",
  "boolean" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.rb.y', 10)
  def _reduce_2(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 11)
  def _reduce_3(val, _values, result)
     result = Decl.new(val[1],val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 12)
  def _reduce_4(val, _values, result)
     result = Fixdecl.new(val[1],val[4],val[6])
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.rb.y', 20)
  def _reduce_10(val, _values, result)
     result = Fixexp.new(val[1],val[4],val[6],val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 22)
  def _reduce_11(val, _values, result)
     result = Letexp.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 24)
  def _reduce_12(val, _values, result)
     result = Funexp.new(val[1],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 26)
  def _reduce_13(val, _values, result)
     result = Binexp.new('<',val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 27)
  def _reduce_14(val, _values, result)
     result = Binexp.new('>',val[0],val[2])
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.rb.y', 30)
  def _reduce_16(val, _values, result)
     result = Binexp.new('+',val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 31)
  def _reduce_17(val, _values, result)
     result = Binexp.new('-',val[0],val[2])
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.rb.y', 34)
  def _reduce_19(val, _values, result)
     result = Binexp.new('*',val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 35)
  def _reduce_20(val, _values, result)
     result = Binexp.new('/',val[0],val[2])
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.rb.y', 38)
  def _reduce_22(val, _values, result)
     result = Appexp.new(val[0],val[1])
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.rb.y', 41)
  def _reduce_24(val, _values, result)
     result = Ifexp.new(val[1],val[3],val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 43)
  def _reduce_25(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 44)
  def _reduce_26(val, _values, result)
    result = IntV.new(val[0])
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.rb.y', 48)
  def _reduce_29(val, _values, result)
     result = BoolV.new("true") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.rb.y', 49)
  def _reduce_30(val, _values, result)
     result = BoolV.new("false") 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Calcp
